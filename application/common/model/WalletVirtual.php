<?php


namespace app\common\model;


use think\console\command\optimize\Schema;
use think\Model;

/**
 * 钱包表
 * Class WalletVirtual
 * @package app\common\model
 * "id": 1,
    "tid": 0,
    "single_number": "0b62e784067c55d1c50ce8799d0fa906",
    "amount": "0.00",金额
    "amount_type": "收入",金额类型 收入 or 支出
    "uid": 72,用户
    "deduction": "0.0", 扣除
    "balance": "0.0",余额
    "egg_coin": "0.0",蛋币
    "create_time": "2020-05-02 13:27:20",
    "update_time": "2020-05-02 13:27:20"
 */
class WalletVirtual extends Model
{
    public $autoWriteTimestamp = true;



    public function more() {
        $this->user;
        $this->logs;
    }



    public function user() {
        return $this->hasOne("Users", 'id', "uid");
    }

    public function logs() {
        return $this->hasMany("WalletVirtualLogs", "uid", "uid")->with("etype");
    }





    /**
     * @param null $data
     * @return bool
     *
     * "deduction": "0.0", 扣除
     * "balance": "0.0",余额
     * "egg_coin": "0.0",蛋币
     * "tid": 0,
     * "amount": "0.00",金额
     */
    public function add($data = null) {
        if ($data == null) {
            return false;
        }
        if (!$data["tid"]) {
            return false;
        }
        if (!$data['uid']) {
            return false;
        }

        $data['single_number'] = md5(time());


        $list = array_merge(array(), WalletVirtualLogs::where(['uid'=>$data['uid']])->all());
        $owallet = end($list);
        $data['balance'] = $owallet['balance'];

        $tid = $data["tid"];
        /** '1', '发工资' **/
        if ($tid == WalletType::Pay) {
            $data['amount_type'] = true;
            $data['title'] = "发工资";
        }
        /** '2', '预支' **/
        if ($tid == WalletType::Advance) {
            $data['amount_type'] = true;
            $data['title'] = "预支";
        }
        /** '3', '业务提成' **/
        if ($tid == WalletType::BusinessCommission) {
            $data['amount_type'] = true;
            $data['title'] = "业务提成";
        }
        /** '4', '驻场提成' **/
        if ($tid == WalletType::ResidentCommission) {
            $data['amount_type'] = true;
            $data['title'] = "驻场提成";
        }
        /** '5', '初级分红' **/
        if ($tid == WalletType::PrimaryDividend) {
            $data['amount_type'] = true;
            $data['title'] = "初级分红";
        }
        /** '6', '高级分红' **/
        if ($tid == WalletType::AdvancedDividend) {
            $data['amount_type'] = true;
            $data['title'] = "高级分红";
        }
        /** '7', '战略联盟分红' **/
        if ($tid == WalletType::StrategicAllianceDividend) {
            $data['amount_type'] = true;
            $data['title'] = "战略联盟分红";
        }
        /** '8', '蛋蛋分红' **/
        if ($tid == WalletType::Dividend) {
            $data['amount_type'] = true;
            $data['title'] = "蛋蛋分红";
        }
        /** '9', '卖出' **/
        if ($tid == WalletType::Sell) {
            $data['amount_type'] = true;
            $data['title'] = "卖出";
        }
        /** '10', '消费' **/
        if ($tid == WalletType::Consumption) {
            $data['amount_type'] = false;
            $data['title'] = "消费";
        }
        /** '11', 签到 **/
        if ($tid == WalletType::SignIn) {
            $data['amount_type'] = true;
            $data['title'] = "签到";
        }
        /** '12', 分享 **/
        if ($tid == WalletType::Share) {
            $data['amount_type'] = true;
            $data['title'] = "分享";
        }

        if (WalletVirtualLogs::create($data)) {
            return true;
        } else {
            return false;
        }

    }


    public function delete($data = null)
    {
        if ($data != null) {
            $this->deletelogs();
        }
        return parent::delete($data); // TODO: Change the autogenerated stub
    }

    public function deletelogs() {
        $user = Users::fromToken();
        $logs = WalletVirtualLogs::where(["uid"=>$user->id])->all();
        foreach ($logs as $log) {
            $log->delete($log->id);
        }
    }

}